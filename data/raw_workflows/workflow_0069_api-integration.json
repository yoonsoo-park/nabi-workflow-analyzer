{
  "name": "Complex Multi-Branch - Api-Integration 69",
  "id": "workflow_0069",
  "active": true,
  "nodes": [
    {
      "id": "START_0",
      "name": "Start 0",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        676,
        392
      ],
      "parameters": {}
    },
    {
      "id": "SLACK_1",
      "name": "Slack 1",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        88,
        595
      ],
      "parameters": {
        "channel": "#general",
        "text": "Hello from n8n!"
      }
    },
    {
      "id": "IF_2",
      "name": "IF 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        504,
        538
      ],
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "equal",
              "value2": "active"
            }
          ]
        }
      }
    },
    {
      "id": "EMAILSEND_3",
      "name": "Send Email 3",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        416,
        156
      ],
      "parameters": {
        "toEmail": "user@example.com",
        "subject": "Notification",
        "text": "This is a notification from your workflow."
      }
    },
    {
      "id": "FUNCTION_4",
      "name": "Function 4",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        250,
        101
      ],
      "parameters": {
        "functionCode": "return items.map(item => ({ json: { ...item.json, processed: true } }));"
      }
    },
    {
      "id": "WEBHOOK_5",
      "name": "Webhook 5",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        781,
        61
      ],
      "parameters": {
        "path": "webhook-path",
        "httpMethod": "POST"
      }
    },
    {
      "id": "SET_6",
      "name": "Set 6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        500,
        339
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "user_id",
              "value": "medium"
            }
          ]
        }
      }
    },
    {
      "id": "FUNCTION_7",
      "name": "Function 7",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        338,
        299
      ],
      "parameters": {
        "functionCode": "return items.map(item => ({ json: { ...item.json, processed: true } }));"
      }
    }
  ],
  "connections": {
    "START_0": {
      "main": [
        [
          {
            "node": "SLACK_1",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF_2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF_2": {
      "main": [
        [
          {
            "node": "EMAILSEND_3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EMAILSEND_3": {
      "main": [
        [
          {
            "node": "FUNCTION_4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FUNCTION_4": {
      "main": [
        [
          {
            "node": "WEBHOOK_5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WEBHOOK_5": {
      "main": [
        [
          {
            "node": "SET_6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET_6": {
      "main": [
        [
          {
            "node": "FUNCTION_7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "tags": {
    "category": "api-integration",
    "complexity": "complex",
    "pattern": "multi_branch"
  },
  "settings": {
    "errorWorkflow": null,
    "timezone": "Europe\/London"
  },
  "meta": {
    "created": "2024-07-24",
    "version": "1.0",
    "generator": "sample_data_generator"
  },
  "staticData": {}
}